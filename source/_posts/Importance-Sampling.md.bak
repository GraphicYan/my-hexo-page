---
title: 重要性采样
layout: Importance-Sampling
toc: false
date: 2021/04/17 19:33:15
---


<a name="pSpAR"></a>
## **1 蒙特卡洛路径追踪简要回顾**
<a name="wT1Fu"></a>
## **1.1 算法主要流程**
所有的全局光照算法其实都是围绕着如何求解渲染方程：<br />![](https://intranetproxy.alipay.com/skylark/lark/0/2021/svg/223200/1617959306608-cb40d2ff-ae77-44f0-86d0-190b4dfd766e.svg#from=paste&height=60&id=uc95b5c2c&margin=%5Bobject%20Object%5D&originHeight=60&originWidth=675&originalType=url&status=done&style=none&taskId=u42e1931e-ca11-4023-84e1-d4c1e6a3ac1&width=675)<br />着色点![](https://intranetproxy.alipay.com/skylark/lark/0/2021/svg/223200/1617959306557-608c09cc-932c-4923-9c49-657e54a7b71c.svg#from=paste&height=18&id=u4b88fab2&margin=%5Bobject%20Object%5D&originHeight=18&originWidth=11&originalType=url&status=done&style=none&taskId=u45c00518-faac-4f74-95bf-08abb5fb7a2&width=11)向![](https://intranetproxy.alipay.com/skylark/lark/0/2021/svg/223200/1617959306615-bc50bc16-6a75-4135-bdad-9eb22f208615.svg#from=paste&height=18&id=u0cb0edbe&margin=%5Bobject%20Object%5D&originHeight=18&originWidth=22&originalType=url&status=done&style=none&taskId=u6e8bbf2c-40b2-4d7a-b55f-d5e56c5c81e&width=22)发出的光线由两部分组成，一部分是本身的自发光(一般只有光源才有，其他物体为0)，另一部分由法线所在半球的各个方向上的光线共同贡献得到。<br />路径追踪的方法也非常的直观，即每次碰撞到物体之后都去采样一条可能的scatter的方向，然后递归这个过程直到光线逃逸出场景，或达到终止条件，又或者击中光源形成一条真正可行的光路。简单图示如下：<br />![](https://intranetproxy.alipay.com/skylark/lark/0/2021/jpg/223200/1617959306461-8075ff10-4302-4f65-9cd1-2ea431d7b347.jpg#from=paste&height=338&id=u42e09cf6&margin=%5Bobject%20Object%5D&originHeight=338&originWidth=433&originalType=url&status=done&style=none&taskId=u8da882b7-f9a8-4478-ab6c-88c068a1095&width=433)<br />了解了基本的路径追踪的过程，那么伪代码也就比较好写了：<br />Color **color**(Point p, Direction w, **int** depth)<br />{<br /> **if** depth **<=** 0**:**<br />  **return** Le(p, **-**w);<br /> <br /> _// 递归采样<br />_ w' **=** uniform sampling from hemisphere;<br /> Point hit_point **=** trace(p, w');<br /> <br /> _// 逃逸出场景<br />_ **if** not hit something:<br />  **return** 0;<br /> <br /> **return** Le(p, **-**w) **+** BRDF ***** color(hit_point, w', depth**-**1) ***** cos **/** pdf;<br />}

当然以上的伪代码只是进行一次路径追踪的过程，蒙特卡洛路径追踪是利用多次路径追踪的结果求均值从而不断逼近真实解的一个过程，本质上就是蒙特卡洛积分：<br />![](https://intranetproxy.alipay.com/skylark/lark/0/2021/svg/223200/1617959306603-327c08e4-b621-4812-96ea-87f995c42628.svg#from=paste&height=75&id=u50d70df8&margin=%5Bobject%20Object%5D&originHeight=75&originWidth=675&originalType=url&status=done&style=none&taskId=uf8922432-dfbd-4107-a1b8-977945de54e&width=675)<br />(具体的蒙特卡洛路径追踪的内容可以参考之前的文章，这里就简单的回顾一下)
<a name="xfdNo"></a>
## **1.2 半球面均匀采样方法**
阅读上一小节的伪代码，可以看到在每次采样下一次光线的方向的时候，是对半球面进行均匀采样的，那么具体是如何做到的呢？为此，我们首先要介绍一下如何从一个给定的概率分布![](https://intranetproxy.alipay.com/skylark/lark/0/2021/svg/223200/1617959307971-ac5d86a6-0523-477c-a6fb-a16140cb87a6.svg#from=paste&height=26&id=u1da56664&margin=%5Bobject%20Object%5D&originHeight=26&originWidth=62&originalType=url&status=done&style=none&taskId=ud2e4ab34-2bc6-4673-89dc-1d473b2ba08&width=62)进行采样的方法。<br />**问题描述:**设随机变量![](https://intranetproxy.alipay.com/skylark/lark/0/2021/svg/223200/1617959307991-b0f37121-57ad-46cf-88b9-7dbfbd12975d.svg#from=paste&height=26&id=u16f46efa&margin=%5Bobject%20Object%5D&originHeight=26&originWidth=107&originalType=url&status=done&style=none&taskId=uf5aff561-b812-4868-b339-74b01838933&width=107)，记累积分布函数![](https://intranetproxy.alipay.com/skylark/lark/0/2021/svg/223200/1617959307996-a800b103-92a9-4202-a4f4-8276513db9da.svg#from=paste&height=26&id=u4e42549f&margin=%5Bobject%20Object%5D&originHeight=26&originWidth=174&originalType=url&status=done&style=none&taskId=u9e86e68d-4a4d-4c60-8410-fee573bfdfc&width=174)，现希望从该概率分布中进行采样。<br />**方法:**假设随机变量![](https://intranetproxy.alipay.com/skylark/lark/0/2021/svg/223200/1617959308025-23f7033a-524a-458e-aa71-46b02666a329.svg#from=paste&height=30&id=u47f5e919&margin=%5Bobject%20Object%5D&originHeight=30&originWidth=138&originalType=url&status=done&style=none&taskId=u7bc619c5-c9a6-44cc-a7b6-c49590770dd&width=138)，不难得出该满足均匀分布的随机变量的累积分布函数为![](https://intranetproxy.alipay.com/skylark/lark/0/2021/svg/223200/1617959308023-23c98c7e-3005-463d-a26b-f8d4eddedb0b.svg#from=paste&height=26&id=uadce2332&margin=%5Bobject%20Object%5D&originHeight=26&originWidth=125&originalType=url&status=done&style=none&taskId=u5fadbe6f-61a7-4eba-83d9-695ec21c247&width=125)。现构造另一随机变量![](https://intranetproxy.alipay.com/skylark/lark/0/2021/svg/223200/1617959308335-c3feebcd-9b53-4376-ba31-438e5708ac79.svg#from=paste&height=30&id=ued3b38b4&margin=%5Bobject%20Object%5D&originHeight=30&originWidth=113&originalType=url&status=done&style=none&taskId=u738a3682-b370-46c4-bc01-51aa12eb2ad&width=113)，则<br />![](https://intranetproxy.alipay.com/skylark/lark/0/2021/svg/223200/1617959308408-33b10b61-5e2c-4b15-9657-511770e23f14.svg#from=paste&height=48&id=u3263b318&margin=%5Bobject%20Object%5D&originHeight=48&originWidth=675&originalType=url&status=done&style=none&taskId=u0dfa5f7c-401d-47f9-9368-a318508b4c7&width=675)<br />因此新构造出来的随机变量![](https://intranetproxy.alipay.com/skylark/lark/0/2021/svg/223200/1617959308331-6aaf7dc6-d29c-48b7-8ccc-5403b7633607.svg#from=paste&height=20&id=u40f67088&margin=%5Bobject%20Object%5D&originHeight=20&originWidth=15&originalType=url&status=done&style=none&taskId=uf717ec27-6cb5-4580-ba65-b826cbd011b&width=15)恰好符合随机变量![](https://intranetproxy.alipay.com/skylark/lark/0/2021/svg/223200/1617959308623-e8359ef8-231e-43b2-913d-a5c40a585fbc.svg#from=paste&height=20&id=u6aec3967&margin=%5Bobject%20Object%5D&originHeight=20&originWidth=18&originalType=url&status=done&style=none&taskId=uf6c89578-5717-4eec-b958-3d5877e613b&width=18)的分布，因此想要对随机变量![](https://intranetproxy.alipay.com/skylark/lark/0/2021/svg/223200/1617959308540-85f18fd8-fa6d-4939-ad8a-203fb3d70455.svg#from=paste&height=20&id=ua7d9c9f8&margin=%5Bobject%20Object%5D&originHeight=20&originWidth=18&originalType=url&status=done&style=none&taskId=u3eda4b40-ea94-4c31-8dd2-c818dc604a1&width=18)进行采样，可以转化为对随机变量![](https://intranetproxy.alipay.com/skylark/lark/0/2021/svg/223200/1617959308638-f18341b5-0eb0-4b0e-8f55-a240a83b17dd.svg#from=paste&height=20&id=ud6d6a118&margin=%5Bobject%20Object%5D&originHeight=20&originWidth=15&originalType=url&status=done&style=none&taskId=ucd6e0b38-517f-4f87-8e58-6ceb1c2b1d1&width=15)进行采样，而对后者进行采样是颇为直接的，只用两步：<br />1.在(0,1)之内进行均匀采样得到![](https://intranetproxy.alipay.com/skylark/lark/0/2021/svg/223200/1617959308806-a8c9640e-a7fe-4d8d-a5bf-df09cefbd454.svg#from=paste&height=18&id=u90926364&margin=%5Bobject%20Object%5D&originHeight=18&originWidth=17&originalType=url&status=done&style=none&taskId=u98d520eb-2a4b-4b2a-939e-f3db88e618f&width=17)<br />2.再对其进行![](https://intranetproxy.alipay.com/skylark/lark/0/2021/svg/223200/1617959308839-77eb7b84-9ba4-4c4c-a780-c5a01e9f7556.svg#from=paste&height=30&id=ua3b91d3a&margin=%5Bobject%20Object%5D&originHeight=30&originWidth=71&originalType=url&status=done&style=none&taskId=u6ac0cc58-8e50-4b24-896b-267a22c1c60&width=71)的逆分布函数变换即可。<br />上述方法一般被称为逆分布函数方法，虽然只介绍了对一维随机变量的采样，但拓展到高维也是比较直接的，假设现在要生成二维随机变量![](https://intranetproxy.alipay.com/skylark/lark/0/2021/svg/223200/1617959308925-951c106e-5498-435a-864d-d80cda5b9a8d.svg#from=paste&height=26&id=u6eb362a6&margin=%5Bobject%20Object%5D&originHeight=26&originWidth=157&originalType=url&status=done&style=none&taskId=u967e16ce-9e08-4126-8d5e-cf296a217de&width=157)，则可以先根据边缘概率密度![](https://intranetproxy.alipay.com/skylark/lark/0/2021/svg/223200/1617959308960-1c822cfd-e352-4468-b333-7a6eafc022ba.svg#from=paste&height=26&id=u8c262c3f&margin=%5Bobject%20Object%5D&originHeight=26&originWidth=60&originalType=url&status=done&style=none&taskId=ub4331055-d069-4877-aef0-36df68d891d&width=60)生成![](https://intranetproxy.alipay.com/skylark/lark/0/2021/svg/223200/1617959309067-0247225b-72cf-463e-a525-7b7ada31ce10.svg#from=paste&height=23&id=u3c5cc196&margin=%5Bobject%20Object%5D&originHeight=23&originWidth=17&originalType=url&status=done&style=none&taskId=ufa7f140b-a86d-49a5-ae19-8a08da45998&width=17)的采样，再根据条件概率密度![](https://intranetproxy.alipay.com/skylark/lark/0/2021/svg/223200/1617959309106-3156bd4d-2328-456b-a905-9bae1e4b37e9.svg#from=paste&height=26&id=u7e748ea8&margin=%5Bobject%20Object%5D&originHeight=26&originWidth=78&originalType=url&status=done&style=none&taskId=uc03ea2de-0881-4a42-8781-8af79ac2a55&width=78)生成![](https://intranetproxy.alipay.com/skylark/lark/0/2021/svg/223200/1617959309195-7a6ccfde-7931-40ea-9e70-8012c0c28a15.svg#from=paste&height=23&id=ub25d6217&margin=%5Bobject%20Object%5D&originHeight=23&originWidth=20&originalType=url&status=done&style=none&taskId=uedf3d8ad-8564-4063-80fe-ba350d3e03f&width=20)的采样即可，更高维也类似，不再详述。<br />好了，经过以上的介绍已经明白了如何从一个给定的分布中进行采样，那么接下来就应该回归到本节的标题，如何对半球进行均匀采样？ 因为目标是对半球进行均匀采样，所以立体角满足的概率密度![](https://intranetproxy.alipay.com/skylark/lark/0/2021/svg/223200/1617959309213-c2b1a68c-a11d-49f5-9e78-50835a333d78.svg#from=paste&height=26&id=u1ff7c68a&margin=%5Bobject%20Object%5D&originHeight=26&originWidth=63&originalType=url&status=done&style=none&taskId=u07251a22-a543-4f08-9729-f8dca865768&width=63)必然是一个常数，所以有：<br />![](https://intranetproxy.alipay.com/skylark/lark/0/2021/svg/223200/1617959309266-7b87c578-c4b8-4329-a873-c4c5e65e399c.svg#from=paste&height=89&id=u3c7aad2e&margin=%5Bobject%20Object%5D&originHeight=89&originWidth=675&originalType=url&status=done&style=none&taskId=uc53e9c47-1c9c-4453-a2b5-2e8347229bc&width=675)<br />现在的问题是虽然知道了立体角的概率密度，但没有办法从立体角转化到三维坐标，因此这里利用![](https://intranetproxy.alipay.com/skylark/lark/0/2021/svg/223200/1617959309386-31bf76c8-d5d2-4456-a7e4-e02b24740030.svg#from=paste&height=23&id=ucad60455&margin=%5Bobject%20Object%5D&originHeight=23&originWidth=135&originalType=url&status=done&style=none&taskId=u38151041-28fb-4f54-a56e-e0c8075f5bf&width=135)，将立体角转化为球面坐标，如果能对单位球面坐标![](https://intranetproxy.alipay.com/skylark/lark/0/2021/svg/223200/1617959309509-37016fd9-46a6-4ad8-877a-ee9728cd9792.svg#from=paste&height=26&id=u7e34e96d&margin=%5Bobject%20Object%5D&originHeight=26&originWidth=48&originalType=url&status=done&style=none&taskId=uff79f0d1-4548-464f-a23e-004debc272b&width=48)进行采样，自然可以转化为三维坐标x, y, z了，因此：<br />![](https://intranetproxy.alipay.com/skylark/lark/0/2021/svg/223200/1617959309562-c7a4f1a2-a5da-42d3-bfbe-404c9dceba3d.svg#from=paste&height=167&id=u0cc70fdc&margin=%5Bobject%20Object%5D&originHeight=167&originWidth=675&originalType=url&status=done&style=none&taskId=u5ca5818e-afa3-492b-998e-10f242722f9&width=675)<br />根据上式不难得到![](https://intranetproxy.alipay.com/skylark/lark/0/2021/svg/223200/1617959309517-e93f9779-558a-4795-8e5a-2006a7531618.svg#from=paste&height=26&id=uab19c7bc&margin=%5Bobject%20Object%5D&originHeight=26&originWidth=48&originalType=url&status=done&style=none&taskId=u8fff4474-1688-439d-ae5e-ad6e7ef8da1&width=48)的联合概率密度![](https://intranetproxy.alipay.com/skylark/lark/0/2021/svg/223200/1617959309560-ae4ed134-9f36-41a9-8aab-d3e2eedb886a.svg#from=paste&height=26&id=uf0b870f2&margin=%5Bobject%20Object%5D&originHeight=26&originWidth=182&originalType=url&status=done&style=none&taskId=u1dd04675-49c2-477b-9b2b-9cdced9eba5&width=182)，进一步可以计算得到：<br />![](https://intranetproxy.alipay.com/skylark/lark/0/2021/svg/223200/1617959309704-15cb71b7-f0b9-46ad-b929-db59556e7bc5.svg#from=paste&height=125&id=u4e0a3a53&margin=%5Bobject%20Object%5D&originHeight=125&originWidth=675&originalType=url&status=done&style=none&taskId=u0b1fed01-6c2f-498a-930c-8152e7f663e&width=675)<br />回想本节一开始所讲的采样方法，现在有了边缘概率密度和条件概率密度，那么接下来的采样过程也非常简单了，首先计算得到分布函数：<br />![](https://intranetproxy.alipay.com/skylark/lark/0/2021/svg/223200/1617959309878-5ae71d90-7021-4900-b0cb-7c4f9bd36914.svg#from=paste&height=125&id=u302fe9d0&margin=%5Bobject%20Object%5D&originHeight=125&originWidth=675&originalType=url&status=done&style=none&taskId=ud53f57f3-f42f-4eca-b4da-ce6992787ed&width=675)<br />设![](https://intranetproxy.alipay.com/skylark/lark/0/2021/svg/223200/1617959310007-a68394da-5b95-4a6b-9e08-f83462080c9e.svg#from=paste&height=23&id=u5a83c7ab&margin=%5Bobject%20Object%5D&originHeight=23&originWidth=47&originalType=url&status=done&style=none&taskId=u21f7f6a8-882e-4a49-aebd-ec1082640cc&width=47)是[0, 1]均匀分布的随机数，利用逆分布函数可以得到采样结果：<br />![](https://intranetproxy.alipay.com/skylark/lark/0/2021/svg/223200/1617959309963-39e8bb81-a5a5-447d-a3ad-faab6ebdfb0f.svg#from=paste&height=48&id=ua2e2bbb6&margin=%5Bobject%20Object%5D&originHeight=48&originWidth=675&originalType=url&status=done&style=none&taskId=udf3f6ccd-88e6-4bb9-8a0d-0abc2906c3f&width=675)<br />最终转化为3维坐标：<br />![](https://intranetproxy.alipay.com/skylark/lark/0/2021/svg/223200/1617959310049-0d501d3c-b22a-405c-8a6a-5ec498ada96a.svg#from=paste&height=104&id=u96defe27&margin=%5Bobject%20Object%5D&originHeight=104&originWidth=675&originalType=url&status=done&style=none&taskId=u081a75fb-e277-459e-80e9-aa803c1cfcf&width=675)<br />以上就是一个完整的对半球面均匀采样的一个过程了（tips:因为这里求得的是局部坐标，实际使用中可能还需要根据法线方向，再做一次转换到世界坐标才行）。
<a name="ZaItf"></a>
## **2 重要性采样的运用**
<a name="Q6tqS"></a>
## **2.1 简单例子与基本概念**
首先重新回顾一下蒙特卡洛积分的基本形式：<br />![](https://intranetproxy.alipay.com/skylark/lark/0/2021/svg/223200/1617959310066-188a6f70-be0d-4d83-a5a1-bbae5bece4eb.svg#from=paste&height=75&id=u2fd2a9c0&margin=%5Bobject%20Object%5D&originHeight=75&originWidth=675&originalType=url&status=done&style=none&taskId=u4dfbac39-9ce7-4d7f-b063-f14e5ced4bb&width=675)<br />即对任意函数![](https://intranetproxy.alipay.com/skylark/lark/0/2021/svg/223200/1617959310225-42221e7f-5f35-4195-b6ee-a7716d26c1f8.svg#from=paste&height=26&id=u8f8d24a8&margin=%5Bobject%20Object%5D&originHeight=26&originWidth=40&originalType=url&status=done&style=none&taskId=u332783a5-e6a3-45f8-a60e-00aa16de77e&width=40)的积分都可以写成右边的形式来进行近似，通过对指定的概率密度分布进行采样，最终代入求均值即可。但采样的pdf往往会对近似结果的误差及收敛速度有着巨大的影响，我们从一个简单的积分例子入手：<br />![](https://intranetproxy.alipay.com/skylark/lark/0/2021/svg/223200/1617959310269-0f3678cd-d6b8-4c47-af20-1981c8b680ef.svg#from=paste&height=65&id=u0b813110&margin=%5Bobject%20Object%5D&originHeight=65&originWidth=675&originalType=url&status=done&style=none&taskId=u17fb768d-58ee-43a6-b33f-6595240d8d8&width=675)<br />该积分十分的简单，通过解析解可以直接得出答案为8，那么接下来分别使用4种不同的pdf，来进行蒙特卡洛积分的近似，看看他们的结果会有什么不同：<br />![](https://intranetproxy.alipay.com/skylark/lark/0/2021/jpeg/223200/1617959310460-080bb889-2ea8-4cc7-a050-6b7ad8c50a39.jpeg#from=paste&height=184&id=u6bb93ab6&margin=%5Bobject%20Object%5D&originHeight=184&originWidth=552&originalType=url&status=done&style=none&taskId=u030c58a7-4dbd-4fcd-95ae-194912d6185&width=552)<br />如上图所示，这里选用了如第一列所示的4种pdf，从第三列的降低到一定误差所需的采样数量可以看到，第一种的pdf最差，最后一种pdf最好，仅需要1个sample就可以达到要求。那么从第一种到第四种发生了什么变化呢？<br />不难看出pdf的图像是越来越接近被积函数![](https://intranetproxy.alipay.com/skylark/lark/0/2021/svg/223200/1617959310384-b2acfa78-2bef-4df9-aed3-50516a0e6779.svg#from=paste&height=26&id=u741d5fa8&margin=%5Bobject%20Object%5D&originHeight=26&originWidth=40&originalType=url&status=done&style=none&taskId=ub1a707f5-7e79-4276-b9b5-2506bf18703&width=40)的图像的，也就是说只要pdf越接近![](https://intranetproxy.alipay.com/skylark/lark/0/2021/svg/223200/1617959310556-fb1fe0c6-c372-4041-90fc-67c75d66611e.svg#from=paste&height=26&id=u4468fcfa&margin=%5Bobject%20Object%5D&originHeight=26&originWidth=40&originalType=url&status=done&style=none&taskId=u8b8a9ac5-5606-4138-b8fa-1a9e4d4bc36&width=40)收敛速度也就会更快，在极端条件下当![](https://intranetproxy.alipay.com/skylark/lark/0/2021/svg/223200/1617959310531-09496672-5a88-4e5e-8d1f-5bf1024c5c06.svg#from=paste&height=26&id=u47c24029&margin=%5Bobject%20Object%5D&originHeight=26&originWidth=110&originalType=url&status=done&style=none&taskId=u64b6afad-0af0-4e1b-af83-c1a8d66e9c4&width=110)，即pdf完全正比于被积函数时，方差达到0，此时只需要1个sample就能得到积分的正确结果。我们可以简要的证明一下：<br />![](https://intranetproxy.alipay.com/skylark/lark/0/2021/svg/223200/1617959310628-a08da0be-c716-4323-a84d-e15f5d0a41ad.svg#from=paste&height=161&id=u9a68e6c3&margin=%5Bobject%20Object%5D&originHeight=161&originWidth=675&originalType=url&status=done&style=none&taskId=ufcf3375d-82da-4d64-bf3f-d7a0a69ab26&width=675)<br />以上的简单例子其实也基本带出了重要性采样的思想，也就是选用好的pdf来作为采样的分布，而所谓好的pdf也就是![](https://intranetproxy.alipay.com/skylark/lark/0/2021/svg/223200/1617959310840-2e46e197-5805-4c87-ab58-8fd0d993d5ee.svg#from=paste&height=26&id=ub84bfe07&margin=%5Bobject%20Object%5D&originHeight=26&originWidth=130&originalType=url&status=done&style=none&taskId=uaeb1f013-01a5-4185-84bf-3afdb6a96b6&width=130)。我们也可以从直观的角度来考虑一下这个问题，假设被积函数图像如下:<br />![](https://intranetproxy.alipay.com/skylark/lark/0/2021/jpg/223200/1617959310962-2efac4c5-e084-4ca9-9932-17eaedb12cff.jpg#from=paste&height=314&id=uf1b25deb&margin=%5Bobject%20Object%5D&originHeight=314&originWidth=487&originalType=url&status=done&style=none&taskId=u897cac7e-ee50-4a47-a48b-89fb8f783bf&width=487)<br />当某一区域函数值比较大的时候，这部分积分的值自然会对最终结果有比较大的(重要)影响，理所应当的应该在这部分区域采样更多的点，来减小误差，也就是说f(x)大,pdf(x)也应该大。反之当某一区域函数值比较小的时候，这部分积分的值对最终结果没有比较明显的贡献，因此对于这部分区域减少采样点，即使**相对**误差较大，但最终放到整体的积分结果中也是可以接受的。综上为什么应该尽量选取![](https://intranetproxy.alipay.com/skylark/lark/0/2021/svg/223200/1617959310838-839bca2c-b4be-4b6b-b99f-4a2871973827.svg#from=paste&height=26&id=ue20a0e4a&margin=%5Bobject%20Object%5D&originHeight=26&originWidth=130&originalType=url&status=done&style=none&taskId=u15417c42-40be-46ce-9502-dba968c033b&width=130)也就不难理解了。
<a name="apzrS"></a>
## **2.2 路径追踪中的重要性采样**
在理解了重要性采样的想法之后，应该回到路径追踪当中的积分问题，看看如何进行提升：<br />![](https://intranetproxy.alipay.com/skylark/lark/0/2021/svg/223200/1617959310989-4e32f0af-d25a-4d33-8d40-cd7acf12ae0f.svg#from=paste&height=75&id=ueba57d05&margin=%5Bobject%20Object%5D&originHeight=75&originWidth=675&originalType=url&status=done&style=none&taskId=u4cfb53f2-09cd-4269-8a60-63cdac76c9e&width=675)<br />仔细观察上式，显然积分函数![](https://intranetproxy.alipay.com/skylark/lark/0/2021/svg/223200/1617959310980-6878d50f-eaf0-4871-96fa-1a70b3a6f186.svg#from=paste&height=26&id=u76815f08&margin=%5Bobject%20Object%5D&originHeight=26&originWidth=339&originalType=url&status=done&style=none&taskId=ua4feaa32-1c49-40a5-8db7-94149e55515&width=339). 根据2.1节中所说最佳的采样pdf应该正比于被积函数f(x)，但是这在实际中往往是不可能的，因为![](https://intranetproxy.alipay.com/skylark/lark/0/2021/svg/223200/1617959311337-d6dc3ff5-5f8d-4266-8033-c30ef86636fb.svg#from=paste&height=26&id=u1f8bc14e&margin=%5Bobject%20Object%5D&originHeight=26&originWidth=139&originalType=url&status=done&style=none&taskId=u3caee724-bd4f-4f68-a4c1-dbb1722eb9b&width=139)需要提前知道所有关于f(x)的信息，就比如你想算![](https://intranetproxy.alipay.com/skylark/lark/0/2021/svg/223200/1617959311367-7c58dd63-2b2c-4834-9d13-a2f9a7cd0f3a.svg#from=paste&height=23&id=ubd63d454&margin=%5Bobject%20Object%5D&originHeight=23&originWidth=21&originalType=url&status=done&style=none&taskId=u60eae8a5-a361-4b56-b7ed-702e5364d25&width=21)其实本身就是另一个积分问题了。 虽然没有办法得到最优的pdf，但是另一个被广泛采纳的策略是让pdf与被积函数中的一部分成正比，如下图：<br />![](https://intranetproxy.alipay.com/skylark/lark/0/2021/jpg/223200/1617959311417-66c2dda0-e652-4311-9b85-12587bf95dc4.jpg#from=paste&height=145&id=u962f9b5c&margin=%5Bobject%20Object%5D&originHeight=145&originWidth=501&originalType=url&status=done&style=none&taskId=u38b63e7c-ff05-4b4e-82dd-bb60fae02c3&width=501)<br />在这个例子中左边使用了均匀采样，右边使用了正比于部分被积函数的重要性采样方法，不难想象，右边的收敛速度一定是快于左边的。再回到被积函数：<br />![](https://intranetproxy.alipay.com/skylark/lark/0/2021/svg/223200/1617959311346-13e002f3-d29a-4391-ae81-bde2f9d3f9c8.svg#from=paste&height=45&id=u81e0eb90&margin=%5Bobject%20Object%5D&originHeight=45&originWidth=675&originalType=url&status=done&style=none&taskId=u7961c02b-b023-4b17-94c1-cd68531a2e5&width=675)<br />想要正比于部分被积函数，无非3个选项：

- BRDF
- incident radiance
- cosine term

但![](https://intranetproxy.alipay.com/skylark/lark/0/2021/svg/223200/1617959311318-7c80f7c6-dd01-450d-9619-0d755a9af712.svg#from=paste&height=23&id=ueb37c9be&margin=%5Bobject%20Object%5D&originHeight=23&originWidth=21&originalType=url&status=done&style=none&taskId=u0c29ee65-bc90-4d96-8fb8-fd7fa71e7a3&width=21)项在**这里的条件**下并不可行，所以我们只去介绍如何对cosine项和BRDF进行重要性采样的方法。
<a name="aOQZA"></a>
### **2.2.1 Cosine-weighted 半球采样**
对cosine项进行重要性采样，也就意味着pdf正比于cosine项，有![](https://intranetproxy.alipay.com/skylark/lark/0/2021/svg/223200/1617959311599-cfdb1f54-def5-4927-a3bb-c78627d2f8f3.svg#from=paste&height=26&id=u831402b0&margin=%5Bobject%20Object%5D&originHeight=26&originWidth=173&originalType=url&status=done&style=none&taskId=u4277eb6c-06f1-4ec8-b457-4a8fbb243a3&width=173)，则：<br />![](https://intranetproxy.alipay.com/skylark/lark/0/2021/svg/223200/1617959311707-8f7477fb-6df7-499a-893b-f721706a4a3e.svg#from=paste&height=116&id=u6417e34c&margin=%5Bobject%20Object%5D&originHeight=116&originWidth=675&originalType=url&status=done&style=none&taskId=u13f7eea0-b9db-45c1-bfa2-edeea45c6f9&width=675)<br />这里省去计算过程，不难得到![](https://intranetproxy.alipay.com/skylark/lark/0/2021/svg/223200/1617959311738-b71fa7e4-ddd0-4625-8400-529d0298fbf4.svg#from=paste&height=47&id=u0f46b050&margin=%5Bobject%20Object%5D&originHeight=47&originWidth=56&originalType=url&status=done&style=none&taskId=u8adfbf40-7066-4643-9ca8-4db90ee2ae7&width=56)，利用与第一章类似的方法，再将![](https://intranetproxy.alipay.com/skylark/lark/0/2021/svg/223200/1617959311728-7e463ec1-a5a3-4b1a-8732-b4feb662b196.svg#from=paste&height=23&id=uc572aa5f&margin=%5Bobject%20Object%5D&originHeight=23&originWidth=135&originalType=url&status=done&style=none&taskId=u974b38e2-5cac-4150-b755-a2909613ad1&width=135)代入，可得：<br />![](https://intranetproxy.alipay.com/skylark/lark/0/2021/svg/223200/1617959311809-00f773a6-8923-42e5-80d6-6bb07ee17952.svg#from=paste&height=59&id=u045387ce&margin=%5Bobject%20Object%5D&originHeight=59&originWidth=675&originalType=url&status=done&style=none&taskId=u41219217-a69e-47c3-92de-69dbbff21ab&width=675)<br />再计算出边缘概率密度和条件概率密度，以及他们的分布函数：<br />![](https://intranetproxy.alipay.com/skylark/lark/0/2021/svg/223200/1617959312020-860e59c9-b04c-45e5-843f-b4ba22327798.svg#from=paste&height=242&id=u2a702812&margin=%5Bobject%20Object%5D&originHeight=242&originWidth=675&originalType=url&status=done&style=none&taskId=u5aeb0679-a946-43b0-9655-f7a8da8ffbf&width=675)<br />设![](https://intranetproxy.alipay.com/skylark/lark/0/2021/svg/223200/1617959311985-1c2d150a-e20d-4d88-878c-1141e1c1ae21.svg#from=paste&height=23&id=u43f46406&margin=%5Bobject%20Object%5D&originHeight=23&originWidth=47&originalType=url&status=done&style=none&taskId=ucd697cab-73b9-410b-a01e-3efe4bec0df&width=47)是[0, 1]均匀分布的随机数，利用逆分布函数可以得到采样结果：<br />![](https://intranetproxy.alipay.com/skylark/lark/0/2021/svg/223200/1617959312154-89c5d5cc-29ea-4c76-8703-9f63b42d4197.svg#from=paste&height=54&id=ufd19b892&margin=%5Bobject%20Object%5D&originHeight=54&originWidth=675&originalType=url&status=done&style=none&taskId=u066f0024-af57-4c5d-84f8-9ab24b6351c&width=675)<br />转化为3维坐标：<br />![](https://intranetproxy.alipay.com/skylark/lark/0/2021/svg/223200/1617959312227-341a0eb8-9d24-4d54-8332-15eea52b317a.svg#from=paste&height=110&id=u40ca9ed3&margin=%5Bobject%20Object%5D&originHeight=110&originWidth=675&originalType=url&status=done&style=none&taskId=ued031127-4508-448a-a073-777e4e6b26f&width=675)<br />最后将cosine-weighted的重要性采样和均匀采样一起运用在环境光遮蔽的计算之中进行比较<br />![](https://intranetproxy.alipay.com/skylark/lark/0/2021/jpeg/223200/1617959312373-be331bf0-094b-4c7a-9cc8-391c1e905d12.jpeg#from=paste&height=480&id=u877a284b&margin=%5Bobject%20Object%5D&originHeight=480&originWidth=860&originalType=url&status=done&style=none&taskId=ua1bec552-2e5c-44b0-a498-73a9ef9116e&width=860)<br />可以明显的看出同样是4 samples per pixel，使用cosine-weighted的重要性采样收敛结果远远好于均匀采样。
<a name="r1zVj"></a>
### **2.2.2 BRDF采样**
既然要根据BRDF进行采样，那么首先自然是确定BRDF的形式，这里采用基于微表面模型理论的BRDF：<br />![](https://intranetproxy.alipay.com/skylark/lark/0/2021/svg/223200/1617959312384-4ce029f9-b22c-4c84-b13c-995610579178.svg#from=paste&height=68&id=u0f9630ee&margin=%5Bobject%20Object%5D&originHeight=68&originWidth=675&originalType=url&status=done&style=none&taskId=u3dfb9279-2bf5-4dd5-ac9d-e2882cad407&width=675)<br />其中：<br />![](https://intranetproxy.alipay.com/skylark/lark/0/2021/svg/223200/1617959312534-4a5a0f70-bcdc-4164-abf2-dcbd3515dae6.svg#from=paste&height=104&id=uc167d0a9&margin=%5Bobject%20Object%5D&originHeight=104&originWidth=675&originalType=url&status=done&style=none&taskId=u2042628b-e8fd-4404-9eaf-fe1728961b3&width=675)<br />(为了后序推导的方便，这里对微表面BRDF还进行了一定的简化，即没有用菲涅尔项带来计算反射与折射的百分比，而是直接使用kd和ks，简单的保证了能量守恒)<br />具体来说，这里采用Beckmann分布作为法线分布函数(![](https://intranetproxy.alipay.com/skylark/lark/0/2021/svg/223200/1617959312527-43cd4acb-25d7-4eda-921d-7e65b0d55e00.svg#from=paste&height=23&id=uea21b053&margin=%5Bobject%20Object%5D&originHeight=23&originWidth=20&originalType=url&status=done&style=none&taskId=ub1db0f52-dbba-4dd4-9d25-9dadd418309&width=20)为微平面法线与宏观法线的夹角)：<br />![](https://intranetproxy.alipay.com/skylark/lark/0/2021/svg/223200/1617959312575-4f99cea9-cb88-494b-9fd4-b51b955cb74a.svg#from=paste&height=87&id=u0f5793f9&margin=%5Bobject%20Object%5D&originHeight=87&originWidth=675&originalType=url&status=done&style=none&taskId=ud577cc75-c31e-4f67-84c6-27b2740d362&width=675)<br />几何函数则使用Smith近似：<br />![](https://intranetproxy.alipay.com/skylark/lark/0/2021/svg/223200/1617959312983-b8927eb6-d8a8-42ac-8701-46ad24235641.svg#from=paste&height=111&id=uc3547c35&margin=%5Bobject%20Object%5D&originHeight=111&originWidth=841&originalType=url&status=done&style=none&taskId=ue1695de2-dff3-4d76-a4cd-0417c265b46&width=841)<br />再次仔细观察BRDF，不难看出，其中分为左边的漫反射项和右边的镜面反射项，当单独考虑坐标的漫反射项时可以结合原被积函数中的cos项，使其变为一个cosine-weighted的重要性采样。此时有：<br />![](https://intranetproxy.alipay.com/skylark/lark/0/2021/svg/223200/1617959312790-128ee666-60c3-438c-934f-6ca47dd21322.svg#from=paste&height=59&id=uc999eb6b&margin=%5Bobject%20Object%5D&originHeight=59&originWidth=675&originalType=url&status=done&style=none&taskId=u6ed5036b-8be7-48c8-9038-560b7b3f56f&width=675)<br />当不看漫反射项，单独考虑镜面反射项的时候其式子略有一些复杂，不过可以做一做排除法，菲涅尔项需要知道采样方向之后才能计算，所以需要排除在外，几何函数项并非连续函数，所以也可以直接排除在外，那么此时分母上只剩下法线分布函数了，而我们所要做的也正是使得pdf正比于法线分布函数项！回想在前文[Cook-Torrance BRDF推导](https://zhuanlan.zhihu.com/p/152226698)中，曾对法线分布函数的物理含义进行具体的定义，即每单位面积,每单位立体角所有法向为![](https://intranetproxy.alipay.com/skylark/lark/0/2021/svg/223200/1617959312861-75b0aab7-2211-49f9-8b8c-991c80e64e46.svg#from=paste&height=18&id=u220f8a29&margin=%5Bobject%20Object%5D&originHeight=18&originWidth=24&originalType=url&status=done&style=none&taskId=u5d011afc-3bac-4db9-8d42-a7f389906f9&width=24)的微平面的面积，利用该点定义可以推出：<br />![](https://intranetproxy.alipay.com/skylark/lark/0/2021/svg/223200/1617959312896-89781c21-dc3e-4609-8fc9-52d76eb8cae9.svg#from=paste&height=60&id=udbaa00d4&margin=%5Bobject%20Object%5D&originHeight=60&originWidth=675&originalType=url&status=done&style=none&taskId=u85b80e77-0fcc-472d-852c-26d951e0319&width=675)<br />可以看到积分结果恰好为1，那么被积函数应该是一个概率密度函数，但可惜的是这里是![](https://intranetproxy.alipay.com/skylark/lark/0/2021/svg/223200/1617959312884-7491f79f-d73e-47e4-820c-5b69adea9920.svg#from=paste&height=18&id=uaa649472&margin=%5Bobject%20Object%5D&originHeight=18&originWidth=24&originalType=url&status=done&style=none&taskId=ue5e8c0c4-8af2-4934-a0de-f3c6afad329&width=24)的概率密度函数，而需要的是![](https://intranetproxy.alipay.com/skylark/lark/0/2021/svg/223200/1617959313070-30a59108-2bfc-47df-9b86-1af7345b05bc.svg#from=paste&height=18&id=u5123c313&margin=%5Bobject%20Object%5D&originHeight=18&originWidth=20&originalType=url&status=done&style=none&taskId=u75d690d5-151e-46b1-a3cc-44355915265&width=20)的概率密度函数，所以需要一个转换，同样利用[Cook-Torrance BRDF推导](https://zhuanlan.zhihu.com/p/152226698)文中得到的![](https://intranetproxy.alipay.com/skylark/lark/0/2021/svg/223200/1617959313186-6262de9c-0889-492e-9792-ee8f6fd99f2b.svg#from=paste&height=23&id=u36104d59&margin=%5Bobject%20Object%5D&originHeight=23&originWidth=31&originalType=url&status=done&style=none&taskId=u6b85e052-1312-4d57-9d52-c147e76d952&width=31)和![](https://intranetproxy.alipay.com/skylark/lark/0/2021/svg/223200/1617959313191-7054c4c4-7d80-49f4-a716-3566be00a526.svg#from=paste&height=23&id=uace4b50f&margin=%5Bobject%20Object%5D&originHeight=23&originWidth=35&originalType=url&status=done&style=none&taskId=u12fc905a-6c8a-4840-90e9-e50afd832ae&width=35)的关系：<br />![](https://intranetproxy.alipay.com/skylark/lark/0/2021/svg/223200/1617959313231-0c9983b8-d73b-4e19-b588-39cb9980a2a8.svg#from=paste&height=65&id=ub9c789e0&margin=%5Bobject%20Object%5D&originHeight=65&originWidth=675&originalType=url&status=done&style=none&taskId=u9c12eb3c-98a6-4ea9-b26e-28baa1425a0&width=675)<br />将此式代入：<br />![](https://intranetproxy.alipay.com/skylark/lark/0/2021/svg/223200/1617959313398-87ef9d43-d40a-4e04-ace6-8cf30b3fb844.svg#from=paste&height=65&id=u1b5ce5f2&margin=%5Bobject%20Object%5D&originHeight=65&originWidth=675&originalType=url&status=done&style=none&taskId=u1f0c0bc0-3f60-4c6a-8e20-ef7d9be1dc6&width=675)<br />因此最终得到想要的![](https://intranetproxy.alipay.com/skylark/lark/0/2021/svg/223200/1617959313428-6f4390e7-1614-42e0-954f-e62056e5ccaa.svg#from=paste&height=56&id=u0cd7f2df&margin=%5Bobject%20Object%5D&originHeight=56&originWidth=254&originalType=url&status=done&style=none&taskId=uecf19e87-1e70-4880-903f-5d9fa880b69&width=254)。（关于这部分直接拿来用的关系可以参考前文推导，这里就不重复推一遍了）<br />有的读者可能会疑惑，绕这么一圈得到单独考虑brdf漫反射项和镜面反射项的重要性采样分布是为了什么，最后不还是只能对单独某一个pdf采样吗。答案是为了尽可能抓住brdf的特性，所以最终采样的pdf不仅仅是漫反射部分，也不仅仅是镜面反射部分，而是把两部分结合起来的一个全新的pdf：<br />![](https://intranetproxy.alipay.com/skylark/lark/0/2021/svg/223200/1617959313522-806e1b2f-7cb7-4005-969f-989de18f6e26.svg#from=paste&height=65&id=u7b14b8c0&margin=%5Bobject%20Object%5D&originHeight=65&originWidth=675&originalType=url&status=done&style=none&taskId=u9371187c-d7ea-4d84-92d4-cfe9e7c8b13&width=675)<br />那么要想符合这个pdf进行重要性采样，需要首先生成一个随机数![](https://intranetproxy.alipay.com/skylark/lark/0/2021/svg/223200/1617959313500-9a27cc91-4f14-410a-9c9b-7c942a42e116.svg#from=paste&height=20&id=ua7f8a6ad&margin=%5Bobject%20Object%5D&originHeight=20&originWidth=20&originalType=url&status=done&style=none&taskId=u288006f8-e784-428a-aed7-82f3e798eee&width=20)，如果![](https://intranetproxy.alipay.com/skylark/lark/0/2021/svg/223200/1617959313508-5d7186ec-d7df-4811-91d5-397beee39bfa.svg#from=paste&height=20&id=u47ceaebf&margin=%5Bobject%20Object%5D&originHeight=20&originWidth=20&originalType=url&status=done&style=none&taskId=u82461faf-274a-4230-8906-8f3bffbbfc4&width=20)小于ks则用镜面反射部分的pdf来采样，否则则用漫反射部分的pdf进行采样。这种结合的方式其实是非常直观的，如果ks大也就是镜面反射多，那么就应该以更大的概率用镜面反射部分的pdf来采样，反之亦然。<br />(tips：由于对brdf的简化，所以这里的结合方式不是那么的物理，如果使用更加物理的brdf，这里的结合需要考虑metalness，个人感觉这里的ks应该设为![](https://intranetproxy.alipay.com/skylark/lark/0/2021/svg/223200/1617959313791-d52ee819-08a7-44a1-a0fb-38ac096299f8.svg#from=paste&height=26&id=u76a4ee61&margin=%5Bobject%20Object%5D&originHeight=26&originWidth=271&originalType=url&status=done&style=none&taskId=u7cf2e141-e653-42ba-9acd-2e4e74284d3&width=271)，因为找了一些资料也没找到具体的设置方法，所以不保证正确，有大佬知道也欢迎告知)<br />在2.2.1节，已经推导过了cosine-weighted的重要性采样，所以当![](https://intranetproxy.alipay.com/skylark/lark/0/2021/svg/223200/1617959313739-02617567-9625-4550-9a8f-7524f5c8dc9c.svg#from=paste&height=23&id=u3b55fd92&margin=%5Bobject%20Object%5D&originHeight=23&originWidth=68&originalType=url&status=done&style=none&taskId=ua8f98294-e87a-4f21-9106-f5fa047f5e1&width=68)的时候，直接用那一套的方法就可以了，但是当![](https://intranetproxy.alipay.com/skylark/lark/0/2021/svg/223200/1617959313822-d36d0cdc-b6ef-4f89-8d42-e68e53e4cb54.svg#from=paste&height=23&id=ue10eb068&margin=%5Bobject%20Object%5D&originHeight=23&originWidth=68&originalType=url&status=done&style=none&taskId=u4a55a9fe-9062-445a-afa9-6008caa677e&width=68)时，对于镜面反射部分pdf还不知道如何进行采样，这里给出一个简要的推导：<br />虽然我们已经得到了对于镜面反射部分![](https://intranetproxy.alipay.com/skylark/lark/0/2021/svg/223200/1617959313827-52153e2a-818e-49b7-9f2a-764f9fb5bcfe.svg#from=paste&height=56&id=u286a1433&margin=%5Bobject%20Object%5D&originHeight=56&originWidth=254&originalType=url&status=done&style=none&taskId=u17aba7ef-bf61-4ce7-9b27-116f9d909b8&width=254)。但实际上并不需要对![](https://intranetproxy.alipay.com/skylark/lark/0/2021/svg/223200/1617959313842-20225faf-8421-456b-a029-51354d1cb6e2.svg#from=paste&height=18&id=u008a513e&margin=%5Bobject%20Object%5D&originHeight=18&originWidth=20&originalType=url&status=done&style=none&taskId=uad6f5aa1-2b0b-4b13-baa8-82887df1e2e&width=20)直接采样，更好的方法是对![](https://intranetproxy.alipay.com/skylark/lark/0/2021/svg/223200/1617959314043-97104786-f3f8-4dc0-9089-bfcef4528c20.svg#from=paste&height=26&id=u3d02ffb9&margin=%5Bobject%20Object%5D&originHeight=26&originWidth=216&originalType=url&status=done&style=none&taskId=ucb43e2dd-5883-4cd2-9b3d-79d68de220d&width=216)直接采样微平面法线，再利用![](https://intranetproxy.alipay.com/skylark/lark/0/2021/svg/223200/1617959314086-9fd6321a-e143-4392-807f-5f22008714cc.svg#from=paste&height=18&id=u99b7d1c1&margin=%5Bobject%20Object%5D&originHeight=18&originWidth=22&originalType=url&status=done&style=none&taskId=u02d468b0-2560-4617-92d8-237e3b57cbc&width=22)转换到![](https://intranetproxy.alipay.com/skylark/lark/0/2021/svg/223200/1617959314103-4f54bc48-4666-40b3-ab28-e0e6e903eae9.svg#from=paste&height=18&id=u929e5cd5&margin=%5Bobject%20Object%5D&originHeight=18&originWidth=20&originalType=url&status=done&style=none&taskId=u48da7731-4d6f-4bd3-af40-8a2a6444e11&width=20)即可（因为二者关于微平面法线呈反射关系）。同样的，对于直接采样微平面法线使用的还是在第一章里面所说的那一套方法：<br />![](https://intranetproxy.alipay.com/skylark/lark/0/2021/svg/223200/1617959314172-03b06f34-e508-4568-bff2-f805bbf9749f.svg#from=paste&height=116&id=u2d07af9c&margin=%5Bobject%20Object%5D&originHeight=116&originWidth=675&originalType=url&status=done&style=none&taskId=u48df669f-4c6e-4552-9529-b50b18fc7e4&width=675)<br />得到：<br />![](https://intranetproxy.alipay.com/skylark/lark/0/2021/svg/223200/1617959314200-ac06002f-3b81-4f47-98bd-e3a968d10161.svg#from=paste&height=87&id=u85aab5b8&margin=%5Bobject%20Object%5D&originHeight=87&originWidth=675&originalType=url&status=done&style=none&taskId=u27695de5-f996-4d77-9720-b57af0ae5ad&width=675)<br />关于边缘概率密度，条件概率密度，以及对应的分布函数，这里就不推导了，主要是过程比较繁杂，但实际上就是积分运算（可以令![](https://intranetproxy.alipay.com/skylark/lark/0/2021/svg/223200/1617959314345-c0214ba0-74e8-477a-9a73-fef8b02a2476.svg#from=paste&height=20&id=u606161b8&margin=%5Bobject%20Object%5D&originHeight=20&originWidth=81&originalType=url&status=done&style=none&taskId=u3e178c12-6035-4fda-8f92-8b20a0d2b49&width=81)，则![](https://intranetproxy.alipay.com/skylark/lark/0/2021/svg/223200/1617959314368-4601d2e8-30ae-4443-898a-8c4924674cba.svg#from=paste&height=54&id=uefb8f403&margin=%5Bobject%20Object%5D&originHeight=54&originWidth=146&originalType=url&status=done&style=none&taskId=u8a6cc775-9bdd-425e-98a0-875393a93ef&width=146)，来简便推导运算过程）<br />最终可以得到：<br />![](https://intranetproxy.alipay.com/skylark/lark/0/2021/svg/223200/1617959314447-e6ba4fbe-c092-4fb0-9555-ff96ab8186be.svg#from=paste&height=56&id=ub697fd23&margin=%5Bobject%20Object%5D&originHeight=56&originWidth=675&originalType=url&status=done&style=none&taskId=ub70df5c9-9fca-4513-954d-345f8c1fafb&width=675)<br />从球极坐标转化为3维坐标之后，别忘了在再用![](https://intranetproxy.alipay.com/skylark/lark/0/2021/svg/223200/1617959314549-49bdb19a-769c-46c6-9a5e-278c306ec770.svg#from=paste&height=18&id=ue33b5511&margin=%5Bobject%20Object%5D&originHeight=18&originWidth=22&originalType=url&status=done&style=none&taskId=ue058cba7-a9ba-4410-9d31-8b33b31287e&width=22)关于![](https://intranetproxy.alipay.com/skylark/lark/0/2021/svg/223200/1617959314524-b88b7c43-d63a-4252-8146-83f4d0497e16.svg#from=paste&height=18&id=uf782ea9e&margin=%5Bobject%20Object%5D&originHeight=18&originWidth=24&originalType=url&status=done&style=none&taskId=u2bd8efcb-3906-4c30-8488-206c2b66fbf&width=24)镜面反射到![](https://intranetproxy.alipay.com/skylark/lark/0/2021/svg/223200/1617959314678-30f7f5bf-94d9-4c94-a39b-6cdec9727dba.svg#from=paste&height=18&id=ue6f5d7a3&margin=%5Bobject%20Object%5D&originHeight=18&originWidth=20&originalType=url&status=done&style=none&taskId=u3336e1f9-8bbb-4deb-b241-c28a9187f9f&width=20)即可。<br />最后，均匀采样v.s.BRDF重要性采样：<br />![](https://intranetproxy.alipay.com/skylark/lark/0/2021/jpeg/223200/1617959314849-1de9957c-924e-451b-880d-5e15c1c1ce30.jpeg#from=paste&height=370&id=u2500f21e&margin=%5Bobject%20Object%5D&originHeight=370&originWidth=495&originalType=url&status=done&style=none&taskId=ue7abd7e2-d127-4815-bdab-6117f1f36ed&width=495)<br />注：虽然本文给出的是Beckmann分布作为法线分布函数的BRDF采样，但改成GGX也是一样的推导过程，不同的是积分运算的结果。
<a name="eVvgZ"></a>
## **3 多重重要性采样的运用**
在第二章中介绍了几种重要性采样分布的具体方法，确实都大大加速了收敛的速度，值得一提的是，在讲[蒙特卡洛路径追踪](https://zhuanlan.zhihu.com/p/146714484)的前文中，使用将光照分为直接光照和间接光照的方法（好像英文叫Next Event Estimation，不太懂为啥这样叫）本质上也可以看做是一种重要性采样的方法，因为在计算直接光照的时候是对光源直接采样的。那么是不是单纯的重要性采样已经足够了呢，答案显然是否定的。我们来观察这样一个场景：<br />![](https://intranetproxy.alipay.com/skylark/lark/0/2021/jpeg/223200/1617959314938-edb530d9-9bec-40e7-b649-999b8cc3be73.jpeg#from=paste&height=462&id=u37bbf71d&margin=%5Bobject%20Object%5D&originHeight=462&originWidth=490&originalType=url&status=done&style=none&taskId=u7787b67b-bf81-40b5-81ad-059c8866813&width=490)<br />场景中首先有4个大小不一，颜色不同的光源，悬挂在半空中，其次还有四块长板子，这4块长板有着不同的光滑程度，最底端的最为粗糙，最顶端的最为光滑。 在这样一个设置之下直接对光源采样来计算直接光照得到的就是上图中的结果，可以看到在图片的右上角部分十分的noise。造成这种现象的原因是长板十分光滑，意味着它的brdf接近delta函数（只有一个小范围才可能对计算结果有贡献），而光源又比较大，在这么大一个光源上进行均匀采样的时候，很难恰好找到那一个有贡献的小的范围，而这就造成了越靠近右上角越noise的现象。<br />既然直接采样光源不行，那就换一种重要性采样，用BRDF采样!<br />![](https://intranetproxy.alipay.com/skylark/lark/0/2021/jpeg/223200/1617959315006-4ba1745c-2c50-447f-b888-fd4e4ed6382c.jpeg#from=paste&height=407&id=u99e4375c&margin=%5Bobject%20Object%5D&originHeight=407&originWidth=411&originalType=url&status=done&style=none&taskId=u36122f3e-52b1-41e8-926f-3938442c667&width=411)<br />即使换了一种采样方法，不难看到在图片的左下角依然出现了非常noise的现象，造成这样的结果的原因是长板十分粗糙，所以用brdf采样的时候其实也就有点接近均匀采样了，那么对于很小的光源几乎就是不可能碰撞到的了。<br />虽然说直接光源采样不行，BRDF采样也不给力，但重新回顾一下两种重要性采样方法的结果，light采样不行的地方似乎brdf很行，而brdf不行的地方，light又很行，二者形成了一个貌似互补的关系！那么有没有什么好的方法能够将两种重要性采样方法的优点给结合起来呢，这就要提到Veach所提出的大名鼎鼎的多重重要性采样(Multiple Importance Sampling, MIS)方法了。<br />MIS提供了一种将多种采样分布结合起来的无偏估计的方法，假设现在有![](https://intranetproxy.alipay.com/skylark/lark/0/2021/svg/223200/1617959314920-211d26c9-91dd-488f-9d24-63a37563a2c3.svg#from=paste&height=15&id=u16d0c693&margin=%5Bobject%20Object%5D&originHeight=15&originWidth=13&originalType=url&status=done&style=none&taskId=ue1f94040-a476-4d63-816a-46e3fea1ad9&width=13)种采样分布，每种采样分布采样了![](https://intranetproxy.alipay.com/skylark/lark/0/2021/svg/223200/1617959314996-4be4b9ec-6470-42d3-97ac-031354c01aef.svg#from=paste&height=18&id=ue6028308&margin=%5Bobject%20Object%5D&originHeight=18&originWidth=20&originalType=url&status=done&style=none&taskId=ufa9f8b4d-22af-4c83-984e-690b73a95fa&width=20)个点，则最后的估计为：<br />![](https://intranetproxy.alipay.com/skylark/lark/0/2021/svg/223200/1617959315178-89c956aa-7dc7-4ab5-af6b-23278aa4eac3.svg#from=paste&height=75&id=ub2318242&margin=%5Bobject%20Object%5D&originHeight=75&originWidth=675&originalType=url&status=done&style=none&taskId=u399e5ebc-2ac7-44bf-a9da-a19832e79ee&width=675)<br />可以看到其本身依旧是一个蒙特卡洛积分的形式，只不过对于从不同的采样分布中采样的结果都乘上了一个与之对应的权重![](https://intranetproxy.alipay.com/skylark/lark/0/2021/svg/223200/1617959315225-4a9ceba2-d342-4423-93b8-7ec57e0685ca.svg#from=paste&height=27&id=u672837a1&margin=%5Bobject%20Object%5D&originHeight=27&originWidth=77&originalType=url&status=done&style=none&taskId=uaf907914-feff-4b12-b10f-896e6f1bf74&width=77). 要想保证这样的estimator依旧是无偏的则需要满足以下两个条件：<br />![](https://intranetproxy.alipay.com/skylark/lark/0/2021/svg/223200/1617959315291-f5ccee8a-1590-47c8-8bfd-74dbeef81b5b.svg#from=paste&height=68&id=u074347e4&margin=%5Bobject%20Object%5D&originHeight=68&originWidth=675&originalType=url&status=done&style=none&taskId=u4a40664a-6029-4380-9d4c-9402e6f2776&width=675)<br />其中关于第一个条件进一步理解是，只要在![](https://intranetproxy.alipay.com/skylark/lark/0/2021/svg/223200/1617959315285-c51d1189-98df-4ab0-afb4-5fe3b1e416ba.svg#from=paste&height=26&id=uc8409e6a&margin=%5Bobject%20Object%5D&originHeight=26&originWidth=40&originalType=url&status=done&style=none&taskId=u76dc365b-8165-4c14-847b-44601cfc1a7&width=40)有值的地方，就一定存在某个分布能够采样到，从另外一个角度来说某些分布完全可以专门负责某些特殊的地方即可。<br />对于这样一个estimator，它的无偏性的证明也是比较简单的：<br />![](https://intranetproxy.alipay.com/skylark/lark/0/2021/svg/223200/1617959315377-2d137e76-7626-4f59-9d75-107d6bed01e4.svg#from=paste&height=194&id=u251fd5f8&margin=%5Bobject%20Object%5D&originHeight=194&originWidth=675&originalType=url&status=done&style=none&taskId=u8f8661fe-c91c-4743-9a09-94b8a7cfbc0&width=675)<br />那么对于这样一个无偏的estimator，该如何设置权重，才能够很好的把各个重要性采样分布的有点结合起来了呢？这里简要介绍两种：<br />**1. Balance heuristic:**<br />![](https://intranetproxy.alipay.com/skylark/lark/0/2021/svg/223200/1617959315466-73e0b562-1fdc-4bf4-8e94-01391be4d6ee.svg#from=paste&height=71&id=uf4437f07&margin=%5Bobject%20Object%5D&originHeight=71&originWidth=675&originalType=url&status=done&style=none&taskId=u599ac05b-1fdc-471e-bb89-3f109dc47c5&width=675)<br />这种设置方法的目的很直接，倘若在一个点你采样的pdf越大，其实也就说明了这个重要性采样分布更加擅长这个区域，理应给它更高的权重，而如果pdf小，意味着该重要性采样分布对这个区域没有什么自信，当然应该减小权重，来降低误差。可能这样说比较抽象，我们就以本章一开始的场景为例子，假设![](https://intranetproxy.alipay.com/skylark/lark/0/2021/svg/223200/1617959315488-0577624e-0120-4cd1-8f49-89eb5bc72d75.svg#from=paste&height=23&id=u7edd3a06&margin=%5Bobject%20Object%5D&originHeight=23&originWidth=44&originalType=url&status=done&style=none&taskId=u2887c255-45b5-4dc9-9d72-7d5ff2eaf37&width=44)为光源采样,![](https://intranetproxy.alipay.com/skylark/lark/0/2021/svg/223200/1617959315574-9b04b994-8618-481b-acc6-45f598f754d3.svg#from=paste&height=23&id=u629c88c9&margin=%5Bobject%20Object%5D&originHeight=23&originWidth=44&originalType=url&status=done&style=none&taskId=u2f512078-cb01-4820-a3ee-59b8b652c15&width=44)为BRDF采样。<br />1.当在右上角使用光源采样的时候，由于光源较大，那么![](https://intranetproxy.alipay.com/skylark/lark/0/2021/svg/223200/1617959315664-4f163d6d-f9cf-47a4-be11-208a5851cdbb.svg#from=paste&height=23&id=u49a82fd6&margin=%5Bobject%20Object%5D&originHeight=23&originWidth=44&originalType=url&status=done&style=none&taskId=u6c91aed4-6a1f-43f0-932d-875931f41fb&width=44)自然就会比较小，而BRDF采样由于长板比较光滑，所以![](https://intranetproxy.alipay.com/skylark/lark/0/2021/svg/223200/1617959315760-093d2f9a-0442-4a67-b8f6-76cad44c4a70.svg#from=paste&height=23&id=uc5c0b7cb&margin=%5Bobject%20Object%5D&originHeight=23&originWidth=44&originalType=url&status=done&style=none&taskId=u74849c94-a1ed-47b2-b7e2-b15f1c06c10&width=44)会相对较大，综合下来![](https://intranetproxy.alipay.com/skylark/lark/0/2021/svg/223200/1617959315760-04e0db35-1614-49d0-bb06-4445d28bd913.svg#from=paste&height=18&id=ua4d3f555&margin=%5Bobject%20Object%5D&originHeight=18&originWidth=24&originalType=url&status=done&style=none&taskId=u6996ce51-c5c5-494a-b5d0-ee1e0482af7&width=24)就会比较小，降低了在右上角使用光源采样从而造成的误差(想想第一张图的那些右上角noise，现在都会被乘一个小的权重)<br />2.当在左下角使用BRDF采样的时候，由于光源较小，那么![](https://intranetproxy.alipay.com/skylark/lark/0/2021/svg/223200/1617959315814-882af508-26f6-4f46-9d30-6b1e94c0023d.svg#from=paste&height=23&id=ua6591331&margin=%5Bobject%20Object%5D&originHeight=23&originWidth=44&originalType=url&status=done&style=none&taskId=u7461a551-218d-461d-b0a9-9955f19a85d&width=44)自然就会比较大，而此时长板十分粗糙，所以![](https://intranetproxy.alipay.com/skylark/lark/0/2021/svg/223200/1617959315936-3d18280b-636d-4095-94fc-4f3d9342fefc.svg#from=paste&height=23&id=ud3b3e83f&margin=%5Bobject%20Object%5D&originHeight=23&originWidth=44&originalType=url&status=done&style=none&taskId=ud3a09e3a-0729-4438-8775-00097dabb15&width=44)就比较小，因此![](https://intranetproxy.alipay.com/skylark/lark/0/2021/svg/223200/1617959316008-7e8153a9-4d33-431e-b4b4-4f53521a3df3.svg#from=paste&height=18&id=u97751ddf&margin=%5Bobject%20Object%5D&originHeight=18&originWidth=24&originalType=url&status=done&style=none&taskId=u612fad6e-b0c6-4535-8fd4-8e07e97040e&width=24)就会比较小，降低了在左上角使用BRDF采样从而造成的误差(想想第二张图的那些左下角noise，现在都会被乘一个小的权重)<br />经过以上的解释，相信已经能够大致明白MIS的一个原理了。这里要介绍的第二种权重的设置方法，其实就是在第一种的基础之上用一个指数加大了pdf的差距，使得这种差别变的更加明显<br />**2.Power heuristic：**<br />![](https://intranetproxy.alipay.com/skylark/lark/0/2021/svg/223200/1617959316050-e09b2994-18b4-4868-944a-0d608f1b3524.svg#from=paste&height=74&id=u48dbb65a&margin=%5Bobject%20Object%5D&originHeight=74&originWidth=675&originalType=url&status=done&style=none&taskId=u691ca152-a4b2-4366-bd6c-fbc4f06c3b7&width=675)<br />在原论文中，建议![](https://intranetproxy.alipay.com/skylark/lark/0/2021/svg/223200/1617959316046-b8abeae0-ad57-4011-9787-a272f40ddf7a.svg#from=paste&height=23&id=u44e8f073&margin=%5Bobject%20Object%5D&originHeight=23&originWidth=50&originalType=url&status=done&style=none&taskId=u1ea5cf44-55b3-42b6-8998-f22e5ea8c45&width=50). 在具体实践中，这种进一步扩大pdf区别的power heuristic方法一般可以取得更好的效果。<br />看看使用了power heuristic的MIS的方法之后：<br />![](https://intranetproxy.alipay.com/skylark/lark/0/2021/jpeg/223200/1617959316182-746f232f-773a-498c-90ca-06c7012a8c5e.jpeg#from=paste&height=409&id=u77ad8fca&margin=%5Bobject%20Object%5D&originHeight=409&originWidth=409&originalType=url&status=done&style=none&taskId=u0a513cc0-9c01-4cdb-8aff-96dbd4d818f&width=409)<br />该图片显然结合了光源采样和BRDF采样的优点，不再会在右上角和左下角出现noise了。再看一看该场景之下的权重图：<br />![](https://intranetproxy.alipay.com/skylark/lark/0/2021/jpeg/223200/1617959316238-ef0a34a4-29a7-4e13-b460-089019048712.jpeg#from=paste&height=407&id=u0018c6d5&margin=%5Bobject%20Object%5D&originHeight=407&originWidth=407&originalType=url&status=done&style=none&taskId=u17db7025-2177-44f5-ad6e-28dd0979c66&width=407)<br />红色代表BRDF的权重更大，绿色代表light sampling的权重更大，黄色则代表差不多，回想一下之前的分析，完全符合预期！<br />最后给出一个实现MIS的伪代码以供参考：<br />![](https://intranetproxy.alipay.com/skylark/lark/0/2021/jpeg/223200/1617959316361-e47c9faf-422e-4ffd-a0c4-9ea93caf5625.jpeg#from=paste&height=352&id=u95599bc1&margin=%5Bobject%20Object%5D&originHeight=352&originWidth=826&originalType=url&status=done&style=none&taskId=u6a2035d6-2e2f-424d-8c8d-b28b98f2ba0&width=826)<br />该代码可以看作是在NEE的基础之上修改添加了MIS，这里的两个重要性采样分布就是光源采样与BRDF采样。它们是符合本章一开始所讲的那两个条件的，所以结果一定是一个无偏估计！<br />或者换一种角度看，其实就相当于在计算直接光照的时候有两部分构成，一部分是光源采样，一部分是BRDF采样，它们并不是重复计算，因为都乘了一个weight，被缩小了。而在计算间接光照的时候，实际上还是只有BRDF采样在干活。
